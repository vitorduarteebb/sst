version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sst_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sst_db
      POSTGRES_USER: sst_user
      POSTGRES_PASSWORD: sst_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sst_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sst_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: sst_db
      DB_USERNAME: sst_user
      DB_PASSWORD: sst_password_2024
      JWT_SECRET: sua_chave_secreta_muito_segura_aqui_producao
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - sst_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sst_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=https://145.223.29.139/api/v1
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - sst_network

  nginx:
    image: nginx:alpine
    container_name: sst_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sst_network

volumes:
  postgres_data:

networks:
  sst_network:
    driver: bridge
