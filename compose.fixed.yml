version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: sst_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sst_db
      POSTGRES_USER: sst_user
      POSTGRES_PASSWORD: sst_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    image: node:18-alpine
    container_name: sst_backend
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "3001:3001"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: sst_db
      DATABASE_USER: sst_user
      DATABASE_PASSWORD: sst_password_2024
      JWT_SECRET: sua_chave_secreta_muito_segura_aqui
    depends_on:
      - postgres
    restart: unless-stopped
    command: sh -lc "unset NODE_ENV; npm ci; npm run build; npm run start:prod"

  frontend:
    image: node:18-alpine
    container_name: sst_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://145.223.29.139/api/v1
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    command: sh -lc "npm ci; npm run build; npm start -p 3000 -H 0.0.0.0"

  nginx:
    image: nginx:alpine
    container_name: sst_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
